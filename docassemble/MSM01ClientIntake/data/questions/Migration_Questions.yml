---
initial: True
code: |
  if defined('MSM_Migration_User_is_main_applicant') and MSM_Migration_User_is_main_applicant:
    set_info(user=applicant)
---
objects:
  - user: Individual
  - applicant: Individual
---
# This is the code that drives the Migration Pathway
code: |
  if MSM_Migration_User_is_main_applicant:
    # if the user is the main applicant then we will only gather the `applicant` object. the user object will then be reference to `applicant` (ie it will inheret all the answers)
    applicant.name.first
    user = applicant 
  else: 
    # if the user is not the main applicant we need to gather both the personal information of the user and applicant, beginning with user
    
    # user personal details
    user.name.first
    # main applicant's personal details
    applicant.name.first
    user.relation_to_applicant

  # the following will be asked regardless of whether user is main applicant or not
  # whether other family members coming along
  applicant.family_members_migrating
  # visa statuts
  applicant.aus_visa
  # purpose of enquiry
  applicant.enquiry_purpose
  # Compile Reason List - the process is similar to the wills path
  applicant.has_selected_other = applicant.enquiry_purpose['Other']
  if applicant.has_selected_other:
    # if `other` is selected, hide it 
    applicant.enquiry_purpose['Other'] = False
    # get the selected reasons, excluding `Other` which is False now
    applicant.enquiry_reasons_compiled = applicant.enquiry_purpose.true_values() 
    # Now we reverse the state back to its original value as though it remained intact
    # we use this work-around to be able to get `true_values()` without `Other`, instead of having to clone the DADict so that we don't mutate the actual response.
    applicant.enquiry_purpose['Other'] = True
    # add user description to the end of the list
    applicant.enquiry_reasons_compiled.append(applicant.other_purpose)
  else:
    applicant.enquiry_reasons_compiled = applicant.enquiry_purpose.true_values() 

  ## Extract Filenames ##
  # if we try to display documents using mako in the review screen, 
  # Docassemble will converts the files to images or will display the text
  # if the file is .txt which is unwanted. Therefore, we create a sub list 
  # that only contains the file name and we render this list to user.
  if applicant.documents is not None:
    applicant.documents_display = [doc.filename for doc in applicant.documents]
  MSM_fee_earner
  appointment_type

  # display the review screen
  MSM_Migration_Screen_review
  # user confirmed their answers so send email
  MSM_Migration_Email_receipt_confirmation_sent
  MSM_Pathway_Migration = True
---
#This is the first question of the migration path - asks if the user is the main applicant
question: |
  Are you the {Main Applicant}?
subquestion: |
fields:
  - no label: MSM_Migration_User_is_main_applicant
    datatype: yesnoradio
terms:
  Main Applicant: |
    Main Applicant is the person needing help with their visa or other migration issue. If you are applying on someone else's behalf, you are not the Main Applicant.
---
code: |
  # set the question tag for personal details screen 
  user.ask_details_question = "Please fill out your details below"

  # the user's address is required if they are the main applicant
  user.address_required = True 
  # TODO: maybe address should always be required

  user.passport_country_required = False

  # email required if not main applicant
  user.email_required = not MSM_Migration_User_is_main_applicant
---
code: |
  # set the question tag for personal details screen 
  _your_or_main_applicant = "your" if MSM_Migration_User_is_main_applicant else "the {Main Applicant}'s" 
  applicant.ask_details_question = "Please fill out " +  _your_or_main_applicant  + " personal information below"

  # the applicant's address is always required
  applicant.address_required = True

  # country of passport is always required for applicant
  applicant.passport_country_required = True

  # only required if user is main applicant (if user is main applicant then the `applicant` screen is the only one shown, in which case email is required. if user is not main applicant both `user` and `applicant` screen are show, in which case email is not required)
  applicant.email_required = MSM_Migration_User_is_main_applicant
---
# generic personal detials questions for both user and main applicant
generic object: Individual
question: |
  ${ x.ask_details_question }
fields:
  - First name: x.name.first
  - Other Given Name(s): x.name.other
    required: False
  - Last name: x.name.last
  - Date of Birth: x.birthdate
    datatype: date
  - Email Address: x.email
    datatype: email
    required: x.email_required
  - Contact phone number?: x.phone_number
    help: |
      E.g. +61498765432
      Please include country code as well
  - Current Address: x.address.address
    required: x.address_required
    help: |
      E.g. 123 Main Street
  - Unit/Apartment: x.address.unit
    help: |
      E.g., Unit 12, Apartment 6
    required: False
  - Suburb/City: x.address.city
    required: False
  - State/Province: x.address.state
    required: False
    help: |
      E.g. South Australia
  - Postcode/Zip: x.address.postal_code
    required: False
    help: |
      E.g. 5000
  - Country: x.address.country
    code: |
      countries_list()
    required: True
  - Passport Country: x.passport_country
    code: |
      countries_list()
    help: |
      The country that issued the passport.
    show if:
      code: |
        x.passport_country_required
terms:
  Main Applicant: |
    The person on whose behalf you are contacting us.
---
# ask if there are any family members applying/migrating with applicant
question: Family Members
subquestion: |
  Will any family members be coming with ${applicant.subject()}?
fields:
  - no label: applicant.family_members_migrating
    datatype: radio
    choices:
      - 'Yes'
      - 'No'
---
# If User is NOT the main applicant then this screen will ask for their relationship to the MA
if: user is not applicant
question: How are you related to ${applicant.name.first}?
fields:
  - I am ${applicant.name.first}'s: user.relation_to_applicant
    hint: |
      E.g., Friend, Parent, etc
---
# generic questions about visa details: it is smart enough to decided whether to ask the user for their visa details or that of the applicant if they are not the main applicant
question: Visa Details
subquestion: |
  Please fill out ${ applicant.possessive('Visa Details') } below.
fields:
  - ${applicant.have_question('ever been issued an Australian Visa?', capitalize=True)}: applicant.aus_visa
    datatype: yesnoradio
    help: |
      This includes previous Australian Visas, whether expired or cancelled.
  - What is the Visa type?: applicant.visa_type
    show if: applicant.aus_visa
  - What is the date of expiry?: applicant.visa_expiry
    datatype: date
    show if: applicant.aus_visa
    help: |
      If the Visa has already expired, provide the date that it expired.
  - What is the {main purpose} of ${applicant.possessive('stay')} in Australia?: applicant.stay_reason
    datatype: area
    required: False
terms:
  main purpose: |
    The main reason for staying in Australia (E.g., study, employment).
---
# This asks what legal issue/s the Main Applicant is seeking advice for
question: Purpose of enquiry
subquestion: |
  What best describes the issue ${applicant.subject()} ${applicant.does_verb('are')} seeking advice for?
fields:
  - Purpose of Enquiry: applicant.enquiry_purpose
    datatype: checkboxes
    choices:
      - To apply for permanent pathway
      - To extend current stay
      - To bring family members to Australia
      - Issues with current visa
      - Visa refusal
      - Visa cancellation
      - Citizenship
      - Other
    none of the above: False
  - Please provide details: applicant.other_purpose
    datatype: area
    required: True
    show if: applicant.enquiry_purpose['Other']
  - Please upload any relevant documents: applicant.documents
    datatype: files
    required: False
    help: |
      E.g., Current Visa, Passport, Visa refusal documents, evidence of academic/trade qualifications, resume, or any letters from the Department of Home Affairs
---
#This question gives migration users the option to choose which fee earner they would like to see
question: Which lawyer/migration agent you would like to see?
subquestion: |
  Please select a lawyer/migration agent you would like to see and we will do our best to match you with them OR let MSM assign someone to your matter.
fields:
  - no label: MSM_fee_earner
    datatype: radio
    choices:
      - Catherine Follett
      - Mitchell Simmons
      - Zainab Al-Sweedy
      - Mark Sekerin
      - Let MSM assign someone: a person assigned by MSM
---
# This question will ask what appointment type the user would like to book.
Question: What type of appointment would you prefer?
fields:
  - no label: appointment_type
    datatype: radio
    choices:
      - In person
      - Virtually (Zoom)
---
# Review the user's answers
skip undefined: False
question: |
  Please revist your answers before you submit
review:
  - note: |
      #### Your information
  - Edit: user.name.first
    show if: |
      user is not applicant
    button: |
      Full Name: **${user.name}**

      Email: **${user.email}**

      Date of birth: **${ format_date(user.birthdate, format=' d MMMM YYYY') }**

      Address: 

      **${ user.address.block() }**

      Contact number: **${ user.phone_number }**
  - note: |
      <br>
      #### Relationship to ${applicant}
    show if: |
      user is not applicant
  - Edit: user.relation_to_applicant
    show if: |
      user is not applicant
    button: |
      You said your are ${applicant.name.familiar()}'s **${user.relation_to_applicant}**
  - note: |
      <br/>
      #### ${applicant.name}'s details
    show if: |
      user is not applicant
  - Edit: applicant.name.first
    button: |
      Full name: **${applicant.name}**

      Date of birth: **${ format_date(applicant.birthdate, format=' d MMMM YYYY') }**

      % if not applicant.email:
      Email address: **${applicant.email}**
      % endif 

      Address: 

      **${ applicant.address.block() }**

      Contact number: **${ applicant.phone_number }**
  - note: |
      <br/>
      #### Passport country
  - Edit: applicant.passport_country
    button: |
      Passport was issued in **${country_name(applicant.passport_country)}**
  - note: |
      <br/>
      #### Family members
  - Edit: applicant.family_members_migrating
    button: |
      Other family members **will ${'NOT' if applicant.family_members_migrating == 'No' else ''}** be migrating with ${applicant.subject()}
  - note: |
      <br/>
      #### ${ applicant.possessive('visa details', capitalize=True) }
  - Edit: applicant.aus_visa
    button: |
      ${applicant.subject(capitalize=True)} **${applicant.does_verb('have')} ${'NEVER' if not applicant.aus_visa else ''}** been issued an Australian visa previously

      %if applicant.aus_visa:

      Visa type: **${applicant.visa_type}**

      Visa expiry date: **${format_date(applicant.visa_expiry, format=' d MMMM YYYY')}**

      %endif

      ${applicant.possessive('reason of stay', capitalize=True)}: **${ applicant.stay_reason if applicant.stay_reason != '' else 'Not provided'}**
  - note: |
      <br/>
      #### Purpose of enquiry
  - Edit: applicant.enquiry_purpose
    button: |
      Your ${noun_plural('reason', len( applicant.enquiry_reasons_compiled ))} for contacting us:

      % for reason in add_separators( applicant.enquiry_reasons_compiled ):
      - **${reason}**
      % endfor
  - note: |
      <br/>
      #### Documents
  - Edit: applicant.documents
    button: |
      % if defined('applicant.documents_display'):

      You have supplied **${len(applicant.documents)} ${noun_plural('document', len(applicant.documents))}**:

      <strong>
      % for doc in applicant.documents_display:
      - ${doc}
      % endfor
      </strong>

      % else:
      You have **not** provided any documents
      % endif

  - note: |
      <br/>
      #### Appointment
  - Edit: MSM_fee_earner
    button: |
      You mentioned that you would like to see **${MSM_fee_earner}**
  - Edit: appointment_type
    button: |
      You mentioned that you would like to meet **${appointment_type}**

continue button field: MSM_Migration_Screen_review
continue button label: Confirm and Submit
---
#This code block compiles the documents due to be sent via email upon submission to the user and MSM Legal for the migration path
code: |
  if applicant.documents is not None:
    # attach user supplied documents and the compiled answers
    applicant.email_attachments = applicant.documents
    applicant.email_attachments.insert(0, MSM_Migration_Attachment_answers.pdf)
  else: 
    # if no documents were provided we only attach the answers
    applicant.email_attachments =  MSM_Migration_Attachment_answers.pdf
---
#This code block sends the confirmation email to the user for the migration path
# TODO: what is the reply address
code: |
  MSM_Migration_Email_receipt_confirmation_sent = send_email(to=user, template=MSM_Template_Email_ReceiptConfirmation, attachments=applicant.email_attachments)
---
#This is the code which attaches the pdf to the email the user recieves
attachment:
  - name: legal answers
    filename: ${user.name} Answers
    variable name: MSM_Migration_Attachment_answers
    description: |
      Contains the answers entered by the user
    docx template file: MSM_Legal_Answer_Template_Migration.docx
    valid formats:
      - pdf
---

