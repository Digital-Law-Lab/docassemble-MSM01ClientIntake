---
objects:
  - willsUser: Individual
---
# this is the code that drives the Wills pathway
code: |
  # Compile Issue List - normally a list with `other` is displayed as 
  # "Item one, Item two, and Other". This code replaces `other` with 
  # the description the user provided so it is displayed as 
  # "Item one, Item two, and User description".
  # We persist the original selection, in order to preserve value 
  # when user revisits the screen - if we don't do this `Other` will 
  # be deselected when the user returns to the question to edit their answers
  willsUser.has_selected_other = willsUser.issues_Selected['Other']
  if willsUser.has_selected_other:
    # if `other` is selected, hide it 
    willsUser.issues_Selected['Other'] = False
    # get the selected issues, excluding `Other` which is False now
    willsUser.issues_Compiled = willsUser.issues_Selected.true_values() 
    # Now we reverse the state back to its original value as though it remained intact
    # we use this work-around to be able to get `true_values()` without `Other`, instead of having to clone the DADict so that we don't mutate the actual response.
    willsUser.issues_Selected['Other'] = True
    # add user description to the end of the list
    willsUser.issues_Compiled.append(willsUser.issues_Other)
  else:
    willsUser.issues_Compiled = willsUser.issues_Selected.true_values() 

  ## Extract Filenames ##
  # if we try to display the documents using mako in the review screen, 
  # Docassemble will converts the files to images or will display the text
  # if the file is .txt which is unwanted. Therefore, we create a sub list 
  # that only contains the file name and we render this list to user.
  if willsUser.documents is not None:
    # we only run this if the user has supplied at least one document
    willsUser.documents_display = [doc.filename for doc in willsUser.documents]

  # show review screen for user to confirm their answers 
  MSM_Wills_Screen_ReviewAnswers
  # Send confirmation email
  MSM_Wills_Email_receipt_confirmation_sent
  MSM_Pathway_Wills = True
---
# This question block asks the user which legal issue they may be having
question: Potential Wills and Estates Issues
subquestion: |
  Which of the following Wills and Estates issues do you need help with?
fields:
  - no label: willsUser.issues_Selected
    datatype: checkboxes
    choices:
      - I would like to discuss a new Will, Advance Care Directive, or Power of Attorney
      - I am a named executor and need advice
      - I am a beneficiary and need advice
      - Someone has died without a Will and I need advice
      - The executor is not sharing a copy of the Will or details of the Estate with me and I need advice
      - The executor is refusing to lodge an application for probate and I need advice
      - I have been left out of a Will and I need advice
      - Other
    none of the above: False
  - Please explain what other issues you have: willsUser.issues_Other
    datatype: area
    show if: willsUser.issues_Selected['Other']
  - Please upload any relevant documents if you have them: willsUser.documents
    datatype: files
    required: False
---
# This question block asks the user to fill in their personal information
question: Personal Information
subquestion: |
  Please fill out your personal information
fields:
  - First Name: willsUser.name.first
  - Other Given Name(s): willsUser.name.other
    required: False
  - Last Name: willsUser.name.last
  - Email Address: willsUser.email
    datatype: email
  - contact phone number?: willsUser.phone_number
    help: |
      Please include country code E.g. +61498765432
---
#This block asks if there are any other parties involved in the dispute/matter
question: |
  Other Party's Details
fields:
  - Is there any other party involved in the matter?: willsUser.other_party_involved
    datatype: yesnoradio
  - Please provide their Full Name: willsUser.other_party_fullName
    show if: willsUser.other_party_involved
    help: |
      MSM Legal require this information to check for any conflicts of interest.
---
#This is the review question block for the wills and estates path
skip undefined: False
question: |
  Please review your answers before submitting
subquestion: |

  If you have made a mistake click **Edit** to fix.

review:
  - note: |
      <br/>
      #### Personal information
  - Edit: willsUser.name.first
    button: |
      Name: **${ willsUser.name }**

      Phone number: **${willsUser.phone_number}**

      Email: **${willsUser.email}**
  - note: |
      <br/>
      #### Issues
  - Edit: willsUser.issues_Selected
    button: |
      Your ${noun_plural('reason', len( willsUser.issues_Compiled ))} for contacting us: 

      % for issue in add_separators(willsUser.issues_Compiled):
      - **${issue}**
      % endfor
  - note: |
      <br/>
      #### Documents
  - Edit: willsUser.documents
    button: |
      % if defined('willsUser.documents_display'):

      You have supplied **${len(willsUser.documents)} ${noun_plural('document', len(willsUser.documents))}**:

      % for doc in willsUser.documents_display:
      - **${doc}**
      % endfor


      % else:
      You have **NOT** provided any documents
      % endif
  - note: |
      <br/>
      #### Other party
  - Edit: willsUser.other_party_involved
    button: |
      % if willsUser.other_party_involved:

      You indicated that another party named **${willsUser.other_party_fullName.upper()}** is involved.

      % else:

      You indicated that **NO** other party is involved.

      % endif
continue button field: MSM_Wills_Screen_ReviewAnswers
continue button label: Confirm and Submit
---
#This code block compiles the documents due to be sent via email upon submission to the user and MSM Legal for the wills and estates path
code: |
  if willsUser.documents is not None:
    # attach user supplied documents and the compiled answers
    willsUser.email_attachments = willsUser.documents
    # prepend the answers
    willsUser.email_attachments.insert(0, MSM_Wills_Attachment_compiledAnswers.pdf)
  else: 
    # if no documents were provided we only attach the answers
    # note that we access `.pdf` this is a DAFile whereas the object is DAFileCollection
    willsUser.email_attachments =  MSM_Wills_Attachment_compiledAnswers.pdf
---
# This block controls the PDF attachment for the wills estates email
attachment:
  - name: legal answers
    filename: ${ willsUser.name } Answers
    variable name: MSM_Wills_Attachment_compiledAnswers
    description: |
      contains the answers entered by the user
    docx template file: MSM_Legal_Answer_Template_Wills.docx
    valid formats:
      - pdf
---
# this code block sends the confirmation email for the wills and estates path
code: |
  # the email template referes to `user.name` to avoid Docassemble seeking its definition, we point `user` to  `willsUser`.
  user = willsUser
  MSM_Wills_Email_receipt_confirmation_sent = send_email(to=willsUser,template=MSM_Template_Email_ReceiptConfirmation, attachments=willsUser.email_attachments)
---

